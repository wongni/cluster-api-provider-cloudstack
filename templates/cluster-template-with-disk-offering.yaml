---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 192.168.0.0/16
    serviceDomain: "cluster.local"
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: CloudStackCluster
    name: ${CLUSTER_NAME}
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: ${CLUSTER_NAME}-control-plane
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: CloudStackCluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  controlPlaneEndpoint:
    host: ${CLUSTER_ENDPOINT_IP}
    port: ${CLUSTER_ENDPOINT_PORT=6443}
  failureDomains:
    - name: ${CLOUDSTACK_FD1_NAME=failure-domain-1}
      acsEndpoint:
        name: ${CLOUDSTACK_FD1_SECRET_NAME=cloudstack-credentials}
        namespace: ${CLOUDSTACK_FD1_SECRET_NAMESPACE=default}
      zone:
        name:  ${CLOUDSTACK_ZONE_NAME}
        network:
          name: ${CLOUDSTACK_NETWORK_NAME}
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        name: '{{ local_hostname }}'
        kubeletExtraArgs:
          provider-id: "cloudstack:///'{{ ds.meta_data.instance_id }}'"
    joinConfiguration:
      nodeRegistration:
        name: '{{ local_hostname }}'
        kubeletExtraArgs:
          provider-id: "cloudstack:///'{{ ds.meta_data.instance_id }}'"
        ignorePreflightErrors:
          - DirAvailable--etc-kubernetes-manifests
    preKubeadmCommands:
      - swapoff -a
    diskSetup:
      filesystems:
        - device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}1
          overwrite: false
          extraOpts:
            - -E
            - lazy_itable_init=1,lazy_journal_init=1
          filesystem: ${CLOUDSTACK_DISK_OFFERING_FILESYSTEM}
          label: data_disk
      partitions:
        - device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}
          layout: true
          overwrite: false
          tableType: gpt
    mounts:
      - - LABEL=${CLOUDSTACK_DISK_OFFERING_LABEL}
        - ${CLOUDSTACK_DISK_OFFERING_MOUNT_PATH}
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      kind: CloudStackMachineTemplate
      name: "${CLUSTER_NAME}-control-plane"
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: CloudStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  template:
    spec:
      offering:
        name: ${CLOUDSTACK_CONTROL_PLANE_MACHINE_OFFERING}
      diskOffering:
        name: ${CLOUDSTACK_DISK_OFFERING_NAME}
        mountPath: ${CLOUDSTACK_DISK_OFFERING_MOUNT_PATH}
        device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}
        filesystem: ${CLOUDSTACK_DISK_OFFERING_FILESYSTEM}
        label: ${CLOUDSTACK_DISK_OFFERING_LABEL}
      template:
        name: ${CLOUDSTACK_TEMPLATE_NAME}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  clusterName: "${CLUSTER_NAME}"
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels: null
  template:
    spec:
      clusterName: "${CLUSTER_NAME}"
      version: "${KUBERNETES_VERSION}"
      bootstrap:
        configRef:
          name: "${CLUSTER_NAME}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "${CLUSTER_NAME}-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: CloudStackMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: CloudStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      offering:
        name: ${CLOUDSTACK_WORKER_MACHINE_OFFERING}
      diskOffering:
        name: ${CLOUDSTACK_DISK_OFFERING_NAME}
        mountPath: ${CLOUDSTACK_DISK_OFFERING_MOUNT_PATH}
        device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}
        filesystem: ${CLOUDSTACK_DISK_OFFERING_FILESYSTEM}
        label: ${CLOUDSTACK_DISK_OFFERING_LABEL}
      template:
        name: ${CLOUDSTACK_TEMPLATE_NAME}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: '{{ local_hostname }}'
          kubeletExtraArgs:
            provider-id: "cloudstack:///'{{ ds.meta_data.instance_id }}'"
      preKubeadmCommands:
        - swapoff -a
      diskSetup:
        filesystems:
          - device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}1
            overwrite: false
            extraOpts:
              - -E
              - lazy_itable_init=1,lazy_journal_init=1
            filesystem: ${CLOUDSTACK_DISK_OFFERING_FILESYSTEM}
            label: data_disk
        partitions:
          - device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}
            layout: true
            overwrite: false
            tableType: gpt
      mounts:
        - - LABEL=${CLOUDSTACK_DISK_OFFERING_LABEL}
          - ${CLOUDSTACK_DISK_OFFERING_MOUNT_PATH}
